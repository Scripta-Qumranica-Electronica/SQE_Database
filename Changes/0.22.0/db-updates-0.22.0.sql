-- Set the version of this update (CURRENT_DATABASE_VERSION)
SELECT @VER := "0.22.0";

INSERT INTO `db_version` (version)
VALUES (@VER);

-- Update sign interpretation system --

-- Create the sign_interpretation_character table
CREATE TABLE `sign_interpretation_character` (
  `sign_interpretation_character_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `sign_interpretation_id` int(11) unsigned NOT NULL DEFAULT 0 COMMENT 'The id of the sign interpretation that this character is assigned to.',
  `character` char(1) NOT NULL DEFAULT '' COMMENT 'The character value of the sign interpretation (may be empty).',
  `creator_id` int(11) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`sign_interpretation_character_id`),
  UNIQUE KEY `unique_sign_interpretation_character` (`character`,`sign_interpretation_id`) USING BTREE,
  KEY `fk_sign_interpretation_character_to_sign_interpretation` (`sign_interpretation_id`),
  KEY `fk_sign_interpretation_character_to_creator` (`creator_id`),
  CONSTRAINT `fk_sign_interpretation_character_to_creator` FOREIGN KEY (`creator_id`) REFERENCES `user` (`user_id`),
  CONSTRAINT `fk_sign_interpretation_character_to_sign_interpretation` FOREIGN KEY (`sign_interpretation_id`) REFERENCES `sign_interpretation` (`sign_interpretation_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1769446 DEFAULT CHARSET=utf8mb4 COMMENT='This table provides a character value for a sign interpretation.';

-- Create the sign interpretation owner table
CREATE TABLE `sign_interpretation_character_owner` (
  `sign_interpretation_character_id` int(11) unsigned NOT NULL DEFAULT 0 COMMENT 'The sign interpretation character that is assigned to an edition.',
  `edition_id` int(11) unsigned NOT NULL DEFAULT 0 COMMENT 'The id of the edition to which this value has been assigned.',
  `edition_editor_id` int(11) unsigned NOT NULL DEFAULT 0 COMMENT 'The id of the editor who assigned this value to the edition.',
  `priority` tinyint(4) NOT NULL DEFAULT 0 COMMENT 'The priority of the sign interpretation (a higher value has a higher priority), default value is 0.',
  PRIMARY KEY (`sign_interpretation_character_id`,`edition_id`),
  KEY `fk_sign_interpretation_character_owner_to_edition` (`edition_id`),
  CONSTRAINT `fk_sign_interpretation_character_owner_to_character` FOREIGN KEY (`sign_interpretation_character_id`) REFERENCES `sign_interpretation_character` (`sign_interpretation_character_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_sign_interpretation_character_owner_to_edition` FOREIGN KEY (`edition_id`) REFERENCES `edition` (`edition_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin COMMENT='This table assigns a particular sign interpretation character to a specific edition.  The priority field is used to set the hierarchical priority of this sign interpretation in relation to any other possible variant sign interpretations.';

-- Fill the sign_interpretation_character table
INSERT INTO sign_interpretation_character (sign_interpretation_id, `character`, creator_id)
SELECT DISTINCT sign_interpretation_id, `character`, 1
FROM sign_interpretation;

-- Fill the sign_interpretation_character_owner table
INSERT INTO sign_interpretation_character_owner (sign_interpretation_character_id, edition_id, edition_editor_id)
SELECT DISTINCT sign_interpretation_character_id, edition_id, edition_editor_id
FROM sign_interpretation_character
JOIN sign_interpretation_attribute USING(sign_interpretation_id)
JOIN sign_interpretation_attribute_owner USING(sign_interpretation_attribute_id);

-- Drop unneeded columns from sign_interpretation
ALTER TABLE `sign_interpretation` DROP INDEX `unique_sign_id_is_variant_sign`;
ALTER TABLE `sign_interpretation` DROP COLUMN `character`;
ALTER TABLE `sign_interpretation` DROP COLUMN `is_variant`;

-- Create new views --

-- Sign interpretation view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY INVOKER VIEW `sign_interpretation_view` AS select `SQE`.`sign_interpretation`.`sign_id` AS `sign_id`,`SQE`.`sign_interpretation`.`sign_interpretation_id` AS `sign_interpretation_id`,`SQE`.`sign_interpretation_attribute_owner`.`edition_id` AS `edition_id`,`SQE`.`sign_interpretation_attribute`.`attribute_value_id` AS `attribute_value_id`,`SQE`.`sign_interpretation_attribute`.`sequence` AS `sequence`,`SQE`.`sign_interpretation_attribute`.`creator_id` AS `attribute_creator_id`,`SQE`.`sign_interpretation_attribute_owner`.`edition_editor_id` AS `attribute_editor_id`,`sic`.`character` AS `character`,`sic`.`priority` AS `priority`,`sic`.`creator_id` AS `character_creator_id`,`sic`.`edition_editor_id` AS `character_editor_id`,`sico`.`commentary` AS `commentary`,`sico`.`attribute_id` AS `commentary_attribute_id`,`sico`.`creator_id` AS `commentary_creator_id`,`sico`.`edition_editor_id` AS `commentary_editor_id`,`sir`.`exceptional` AS `exceptional`,`sir`.`values_set` AS `values_set`,`sir`.`artefact_id` AS `artefact_id`,`sir`.`translate_x` AS `translate_x`,`sir`.`translate_y` AS `translate_y`,`sir`.`stance_rotation` AS `stance_rotation`,`sir`.`path` AS `path`,`sir`.`creator_id` AS `roi_creator_id`,`sir`.`edition_editor_id` AS `roi_editor_id` from (((((`SQE`.`sign_interpretation` join `SQE`.`sign_interpretation_attribute` on(`SQE`.`sign_interpretation`.`sign_interpretation_id` = `SQE`.`sign_interpretation_attribute`.`sign_interpretation_id`)) join `SQE`.`sign_interpretation_attribute_owner` on(`SQE`.`sign_interpretation_attribute`.`sign_interpretation_attribute_id` = `SQE`.`sign_interpretation_attribute_owner`.`sign_interpretation_attribute_id`)) left join (select `SQE`.`sign_interpretation_character`.`sign_interpretation_id` AS `sign_interpretation_id`,`SQE`.`sign_interpretation_character`.`character` AS `character`,`SQE`.`sign_interpretation_character`.`creator_id` AS `creator_id`,`SQE`.`sign_interpretation_character_owner`.`priority` AS `priority`,`SQE`.`sign_interpretation_character_owner`.`edition_id` AS `edition_id`,`SQE`.`sign_interpretation_character_owner`.`edition_editor_id` AS `edition_editor_id` from (`SQE`.`sign_interpretation_character` join `SQE`.`sign_interpretation_character_owner` on(`SQE`.`sign_interpretation_character`.`sign_interpretation_character_id` = `SQE`.`sign_interpretation_character_owner`.`sign_interpretation_character_id`))) `sic` on(`sic`.`sign_interpretation_id` = `SQE`.`sign_interpretation`.`sign_interpretation_id` and `sic`.`edition_id` = `SQE`.`sign_interpretation_attribute_owner`.`edition_id`)) left join (select `SQE`.`sign_interpretation_commentary`.`sign_interpretation_id` AS `sign_interpretation_id`,`SQE`.`sign_interpretation_commentary`.`attribute_id` AS `attribute_id`,`SQE`.`sign_interpretation_commentary`.`commentary` AS `commentary`,`SQE`.`sign_interpretation_commentary`.`creator_id` AS `creator_id`,`SQE`.`sign_interpretation_commentary_owner`.`edition_id` AS `edition_id`,`SQE`.`sign_interpretation_commentary_owner`.`edition_editor_id` AS `edition_editor_id` from (`SQE`.`sign_interpretation_commentary` join `SQE`.`sign_interpretation_commentary_owner` on(`SQE`.`sign_interpretation_commentary`.`sign_interpretation_commentary_id` = `SQE`.`sign_interpretation_commentary_owner`.`sign_interpretation_commentary_id`))) `sico` on(`sico`.`sign_interpretation_id` = `SQE`.`sign_interpretation`.`sign_interpretation_id` and `sico`.`edition_id` = `SQE`.`sign_interpretation_attribute_owner`.`edition_id`)) left join (select `SQE`.`sign_interpretation_roi`.`sign_interpretation_id` AS `sign_interpretation_id`,`SQE`.`sign_interpretation_roi`.`values_set` AS `values_set`,`SQE`.`sign_interpretation_roi`.`exceptional` AS `exceptional`,`SQE`.`sign_interpretation_roi`.`creator_id` AS `creator_id`,`SQE`.`roi_position`.`artefact_id` AS `artefact_id`,`SQE`.`roi_position`.`translate_x` AS `translate_x`,`SQE`.`roi_position`.`translate_y` AS `translate_y`,`SQE`.`roi_position`.`stance_rotation` AS `stance_rotation`,`SQE`.`roi_shape`.`path` AS `path`,`SQE`.`sign_interpretation_roi_owner`.`edition_id` AS `edition_id`,`SQE`.`sign_interpretation_roi_owner`.`edition_editor_id` AS `edition_editor_id` from (((`SQE`.`sign_interpretation_roi` join `SQE`.`sign_interpretation_roi_owner` on(`SQE`.`sign_interpretation_roi`.`sign_interpretation_roi_id` = `SQE`.`sign_interpretation_roi_owner`.`sign_interpretation_roi_id`)) join `SQE`.`roi_position` on(`SQE`.`sign_interpretation_roi`.`roi_position_id` = `SQE`.`roi_position`.`roi_position_id`)) join `SQE`.`roi_shape` on(`SQE`.`sign_interpretation_roi`.`roi_shape_id` = `SQE`.`roi_shape`.`roi_shape_id`))) `sir` on(`sir`.`sign_interpretation_id` = `SQE`.`sign_interpretation`.`sign_interpretation_id` and `sir`.`edition_id` = `SQE`.`sign_interpretation_attribute_owner`.`edition_id`));

-- artefact view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY INVOKER VIEW `artefact_view` AS select `SQE`.`artefact_data_owner`.`edition_id` AS `edition_id`,`SQE`.`artefact`.`artefact_id` AS `artefact_id`,`SQE`.`artefact_data`.`name` AS `name`,`SQE`.`artefact_data`.`creator_id` AS `data_creator_id`,`SQE`.`artefact_data_owner`.`edition_editor_id` AS `data_editor_id`,`as`.`region_in_sqe_image` AS `region_in_sqe_image`,`as`.`sqe_image_id` AS `sqe_image_id`,`as`.`url` AS `url`,`as`.`suffix` AS `suffix`,`as`.`proxy` AS `proxy`,`as`.`filename` AS `filename`,`as`.`creator_id` AS `shape_creator_id`,`as`.`edition_editor_id` AS `shape_editor_id`,`ap`.`z_index` AS `z_index`,`ap`.`scale` AS `scale`,`ap`.`rotate` AS `rotate`,`ap`.`translate_x` AS `translate_x`,`ap`.`translate_y` AS `translate_y`,`ap`.`creator_id` AS `position_creator_id`,`ap`.`edition_editor_id` AS `position_editor_id`,`astat`.`work_status_message` AS `work_status_message`,`astat`.`creator_id` AS `status_creator_id`,`astat`.`edition_editor_id` AS `status_editor_id` from (((((`SQE`.`artefact` join `SQE`.`artefact_data` on(`SQE`.`artefact`.`artefact_id` = `SQE`.`artefact_data`.`artefact_id`)) join `SQE`.`artefact_data_owner` on(`SQE`.`artefact_data`.`artefact_data_id` = `SQE`.`artefact_data_owner`.`artefact_data_id`)) left join (select `SQE`.`artefact_shape`.`artefact_id` AS `artefact_id`,`SQE`.`artefact_shape`.`region_in_sqe_image` AS `region_in_sqe_image`,`SQE`.`artefact_shape`.`sqe_image_id` AS `sqe_image_id`,`SQE`.`artefact_shape`.`creator_id` AS `creator_id`,`SQE`.`SQE_image`.`filename` AS `filename`,`SQE`.`image_urls`.`url` AS `url`,`SQE`.`image_urls`.`suffix` AS `suffix`,`SQE`.`image_urls`.`proxy` AS `proxy`,`SQE`.`artefact_shape_owner`.`edition_id` AS `edition_id`,`SQE`.`artefact_shape_owner`.`edition_editor_id` AS `edition_editor_id` from (((`SQE`.`artefact_shape` join `SQE`.`artefact_shape_owner` on(`SQE`.`artefact_shape`.`artefact_shape_id` = `SQE`.`artefact_shape_owner`.`artefact_shape_id`)) left join `SQE`.`SQE_image` on(`SQE`.`artefact_shape`.`sqe_image_id` = `SQE`.`SQE_image`.`sqe_image_id`)) left join `SQE`.`image_urls` on(`SQE`.`SQE_image`.`image_urls_id` = `SQE`.`image_urls`.`image_urls_id`))) `as` on(`as`.`artefact_id` = `SQE`.`artefact`.`artefact_id` and `as`.`edition_id` = `SQE`.`artefact_data_owner`.`edition_id`)) left join (select `SQE`.`artefact_position`.`artefact_id` AS `artefact_id`,`SQE`.`artefact_position`.`z_index` AS `z_index`,`SQE`.`artefact_position`.`scale` AS `scale`,`SQE`.`artefact_position`.`rotate` AS `rotate`,`SQE`.`artefact_position`.`translate_x` AS `translate_x`,`SQE`.`artefact_position`.`translate_y` AS `translate_y`,`SQE`.`artefact_position`.`creator_id` AS `creator_id`,`SQE`.`artefact_position_owner`.`edition_id` AS `edition_id`,`SQE`.`artefact_position_owner`.`edition_editor_id` AS `edition_editor_id` from (`SQE`.`artefact_position` join `SQE`.`artefact_position_owner` on(`SQE`.`artefact_position`.`artefact_position_id` = `SQE`.`artefact_position_owner`.`artefact_position_id`))) `ap` on(`ap`.`artefact_id` = `SQE`.`artefact`.`artefact_id` and `ap`.`edition_id` = `SQE`.`artefact_data_owner`.`edition_id`)) left join (select `SQE`.`artefact_status`.`artefact_id` AS `artefact_id`,`SQE`.`work_status`.`work_status_message` AS `work_status_message`,`SQE`.`artefact_status`.`creator_id` AS `creator_id`,`SQE`.`artefact_status_owner`.`edition_id` AS `edition_id`,`SQE`.`artefact_status_owner`.`edition_editor_id` AS `edition_editor_id` from ((`SQE`.`artefact_status` join `SQE`.`artefact_status_owner` on(`SQE`.`artefact_status`.`artefact_status_id` = `SQE`.`artefact_status_owner`.`artefact_status_id`)) join `SQE`.`work_status` on(`SQE`.`artefact_status`.`work_status_id` = `SQE`.`work_status`.`work_status_id`))) `astat` on(`astat`.`artefact_id` = `SQE`.`artefact`.`artefact_id` and `astat`.`edition_id` = `SQE`.`artefact_data_owner`.`edition_id`));

-- manuscript view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY INVOKER VIEW `manuscript_view` AS select `manuscript_data_owner`.`edition_id` AS `edition_id`,`manuscript`.`manuscript_id` AS `manuscript_id`,`manuscript_data`.`name` AS `name`,`manuscript_data`.`creator_id` AS `data_creator_id`,`manuscript_data_owner`.`edition_editor_id` AS `data_editor_id`,`manuscript_metrics`.`x_origin` AS `x_origin`,`manuscript_metrics`.`y_origin` AS `y_origin`,`manuscript_metrics`.`width` AS `width`,`manuscript_metrics`.`height` AS `height`,`manuscript_metrics`.`pixels_per_inch` AS `pixels_per_inch`,`manuscript_metrics`.`scribal_font_id` AS `scribal_font_id`,`manuscript_metrics`.`creator_id` AS `metrics_creator_id`,`manuscript_metrics_owner`.`edition_editor_id` AS `metrics_editor_id` from ((((`manuscript` join `manuscript_data` on(`manuscript`.`manuscript_id` = `manuscript_data`.`manuscript_id`)) join `manuscript_data_owner` on(`manuscript_data`.`manuscript_data_id` = `manuscript_data_owner`.`manuscript_data_id`)) join `manuscript_metrics` on(`manuscript`.`manuscript_id` = `manuscript_metrics`.`manuscript_id`)) join `manuscript_metrics_owner` on(`manuscript_metrics_owner`.`manuscript_metrics_id` = `manuscript_metrics`.`manuscript_metrics_id` and `manuscript_metrics_owner`.`edition_id` = `manuscript_data_owner`.`edition_id`));

-- text fragment view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY INVOKER VIEW `text_fragment_view` AS select `text_fragment_data_owner`.`edition_id` AS `edition_id`,`text_fragment`.`text_fragment_id` AS `text_fragment_id`,`text_fragment_data`.`name` AS `name`,`text_fragment_data`.`creator_id` AS `data_creator_id`,`text_fragment_data_owner`.`edition_editor_id` AS `data_editor_id` from ((`text_fragment` join `text_fragment_data` on(`text_fragment`.`text_fragment_id` = `text_fragment_data`.`text_fragment_id`)) join `text_fragment_data_owner` on(`text_fragment_data`.`text_fragment_data_id` = `text_fragment_data_owner`.`text_fragment_data_id`));

-- line view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY INVOKER VIEW `line_view` AS select `line_data_owner`.`edition_id` AS `edition_id`,`line`.`line_id` AS `line_id`,`line_data`.`name` AS `name`,`line_data`.`creator_id` AS `data_creator_id`,`line_data_owner`.`edition_editor_id` AS `data_editor_id` from ((`line` join `line_data` on(`line`.`line_id` = `line_data`.`line_id`)) join `line_data_owner` on(`line_data`.`line_data_id` = `line_data_owner`.`line_data_id`));

-- manuscript to text fragment to line to sign view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY INVOKER VIEW `manuscript_text_fragment_line_sign_view` AS select `manuscript_to_text_fragment_owner`.`edition_id` AS `edition_id`,`manuscript`.`manuscript_id` AS `manuscript_id`,`manuscript_to_text_fragment`.`text_fragment_id` AS `text_fragment_id`,`manuscript_to_text_fragment`.`creator_id` AS `manuscript_text_fragment_creator_id`,`manuscript_to_text_fragment_owner`.`edition_editor_id` AS `manuscript_text_fragment_editor_id`,`text_fragment_to_line`.`line_id` AS `line_id`,`text_fragment_to_line`.`creator_id` AS `text_fragment_to_line_creator_id`,`text_fragment_to_line_owner`.`edition_editor_id` AS `text_fragment_to_line_editor_id`,`line_to_sign`.`sign_id` AS `sign_id`,`line_to_sign`.`creator_id` AS `line_to_sign_creator_id`,`line_to_sign_owner`.`edition_editor_id` AS `line_to_sign_editor_id` from ((((((`manuscript` join `manuscript_to_text_fragment` on(`manuscript`.`manuscript_id` = `manuscript_to_text_fragment`.`manuscript_id`)) join `manuscript_to_text_fragment_owner` on(`manuscript_to_text_fragment`.`manuscript_to_text_fragment_id` = `manuscript_to_text_fragment_owner`.`manuscript_to_text_fragment_id`)) join `text_fragment_to_line` on(`manuscript_to_text_fragment`.`text_fragment_id` = `text_fragment_to_line`.`text_fragment_id`)) join `text_fragment_to_line_owner` on(`text_fragment_to_line_owner`.`text_fragment_to_line_id` = `text_fragment_to_line`.`text_fragment_to_line_id` and `text_fragment_to_line_owner`.`edition_id` = `manuscript_to_text_fragment_owner`.`edition_id`)) join `line_to_sign` on(`text_fragment_to_line`.`line_id` = `line_to_sign`.`line_id`)) join `line_to_sign_owner` on(`line_to_sign_owner`.`line_to_sign_id` = `line_to_sign`.`line_to_sign_id` and `line_to_sign_owner`.`edition_id` = `manuscript_to_text_fragment_owner`.`edition_id`));

-- Record the completion of the update
UPDATE `db_version`
SET completed = current_timestamp()
WHERE version = @VER;